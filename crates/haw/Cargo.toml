[package]
name = "haw"
version = "0.1.0"
categories = ["index", "temporal warehousing", "streaming", "no-std"]
authors = ["Max Meldrum <max@meldrum.se>"]
readme = "../../README.md"
edition.workspace = true
license.workspace = true

[package.metadata.docs.rs]
all-features = true
targets = []
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std"]
std = ["rkyv?/std"]
rkyv = ["dep:rkyv"]
top_k = ["dep:hashbrown"]
map = ["dep:hashbrown"]
stats = ["sketches-ddsketch", "minstant", "std"]
sync = ["parking_lot", "std"]
nightly = ["parking_lot?/nightly", "hashbrown?/nightly"]

[dependencies]
smallvec = "1.10.0"
parking_lot = { version = "0.12", optional = true }
hashbrown = { version = "0.13", optional = true }
rkyv = { version = "0.7.39", features = [
    "copy",
    "copy_unsafe",
    "smallvec",
], optional = true }

# Stats 
sketches-ddsketch = { workspace = true, optional = true }
minstant = { workspace = true, optional = true }


[dev-dependencies]
fastrand.workspace = true
rand.workspace = true
criterion.workspace = true
fiba_rs.workspace = true
clap.workspace = true
lz4_flex = { version = "0.11", default-features = false }
zipf = "7.0.0"

[[example]]
name = "serde"
path = "examples/serde.rs"
required-features = ["rkyv", "std"]

[[example]]
name = "memory"
path = "examples/memory.rs"

[[example]]
name = "map_bench"
path = "examples/map_bench.rs"
required-features = ["map"]

[[bench]]
name = "insert"
harness = false

[[bench]]
name = "advance"
harness = false

[[bench]]
name = "queries"
harness = false

[[bench]]
name = "merge"
harness = false

[[bench]]
name = "serde"
harness = false
required-features = ["rkyv"]
